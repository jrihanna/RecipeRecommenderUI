[{"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\index.js":"1","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\reportWebVitals.js":"2","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\App.js":"3","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\profile\\profile-section.js":"4","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\nutrition.js":"5","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\otherDetails.js":"6","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\recipeSummary.js":"7","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\tag\\tag.js":"8","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\ad\\ad.js":"9","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\search\\search.js":"10","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\content.js":"11","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\menu\\menu.js":"12","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\recipeList.js":"13","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\menu\\menuItem.js":"14","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\header.js":"15","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\group\\recipeGroup.js":"16","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\recipeDetail.js":"17","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\ingredientsList.js":"18","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\footer\\footer.js":"19","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\useBusinessSearch.js":"20","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\api.js":"21","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\group\\recipeGroupList.js":"22","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\config.js":"23","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\tag\\tagContainer.js":"24","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newRecipe.js":"25","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newIngredientQuantity.js":"26","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newIngredientQuantityList.js":"27","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\grocery\\grocery.js":"28","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\grocery\\groceryItem.js":"29"},{"size":592,"mtime":1612621052739,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":740,"mtime":1613886311939,"results":"33","hashOfConfig":"31"},{"size":813,"mtime":1611989719274,"results":"34","hashOfConfig":"31"},{"size":2781,"mtime":1613886036805,"results":"35","hashOfConfig":"31"},{"size":432,"mtime":1612270523691,"results":"36","hashOfConfig":"31"},{"size":2435,"mtime":1615084001978,"results":"37","hashOfConfig":"31"},{"size":673,"mtime":1613889520848,"results":"38","hashOfConfig":"31"},{"size":274,"mtime":1613040649428,"results":"39","hashOfConfig":"31"},{"size":7280,"mtime":1613913468718,"results":"40","hashOfConfig":"31"},{"size":3781,"mtime":1615180878769,"results":"41","hashOfConfig":"31"},{"size":164,"mtime":1612873232449,"results":"42","hashOfConfig":"31"},{"size":662,"mtime":1613267838121,"results":"43","hashOfConfig":"31"},{"size":259,"mtime":1612873199950,"results":"44","hashOfConfig":"31"},{"size":1045,"mtime":1615035065955,"results":"45","hashOfConfig":"31"},{"size":4216,"mtime":1615632769516,"results":"46","hashOfConfig":"31"},{"size":2548,"mtime":1613886285521,"results":"47","hashOfConfig":"31"},{"size":751,"mtime":1612787554225,"results":"48","hashOfConfig":"31"},{"size":236,"mtime":1612627848330,"results":"49","hashOfConfig":"31"},{"size":813,"mtime":1615633527725,"results":"50","hashOfConfig":"31"},{"size":955,"mtime":1615633502437,"results":"51","hashOfConfig":"31"},{"size":586,"mtime":1612873421203,"results":"52","hashOfConfig":"31"},{"size":274,"mtime":1615623325334,"results":"53","hashOfConfig":"31"},{"size":2086,"mtime":1615378404242,"results":"54","hashOfConfig":"31"},{"size":6109,"mtime":1615377264665,"results":"55","hashOfConfig":"31"},{"size":1805,"mtime":1615378835364,"results":"56","hashOfConfig":"31"},{"size":3363,"mtime":1615187560927,"results":"57","hashOfConfig":"31"},{"size":2278,"mtime":1615644961029,"results":"58","hashOfConfig":"31"},{"size":1136,"mtime":1615637386037,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1li6piy",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\index.js",[],["128","129"],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\reportWebVitals.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\App.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\profile\\profile-section.js",["130","131","132"],"import './profile.css';\r\nimport pic from '../img/profile.png'\r\n\r\nfunction ProfileSection(props) {\r\n\r\n  const isLogggedIn = true;//props.isLoggedIn;\r\n  if (isLogggedIn) {\r\n    return (\r\n      <div className=\"profile-main\">\r\n        <img src={pic} className=\"profile-img\" alt=\"logo\" />\r\n        <div className=\"logout-link\"><a href=\"\">Log out</a></div>\r\n        \r\n        {/* <div className=\"profile-name\">your name</div> */}\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"profile-main not-logged\">\r\n        <span className=\"logged-span\">\r\n        <a href=\"\" onClick=\"return false;\">Login</a>\r\n        </span>\r\n        <span className=\"logged-span\">\r\n        <a href=\"\" onClick=\"return false;\">Sign up</a>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileSection;\r\n",["133","134"],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\nutrition.js",["135"],"import { useEffect, useState } from \"react\";\r\n\r\nfunction Nutrition(props) {\r\n    const [nutritionValues, setNutritionValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        props.handleChange(nutritionValues)\r\n    }, [nutritionValues]);\r\n    \r\n    return (\r\n        <table className={props.className}>\r\n            {props.minMax ?\r\n                (<tbody>\r\n                    <tr>\r\n                        <td>Calories*:</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.minCaloryInputId} placeholder=\"Min\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, minCalory: event.target.value})} /></td>\r\n                        <td>-</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.maxCaloryInputId} placeholder=\"Max\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, maxCalory: event.target.value})} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Carbs*:</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.minCarbInputId} placeholder=\"Min\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, minCarb: event.target.value})} /></td>\r\n                        <td>-</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.maxCarbInputId} placeholder=\"Max\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, maxCarb: event.target.value})} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Fat*:</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.minFatInputId} placeholder=\"Min\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, minFat: event.target.value})} /></td>\r\n                        <td>-</td>\r\n                        <td><input type=\"number\" className={props.inputClassName} id={props.maxFatInputId} placeholder=\"Max\"\r\n                                onChange={(event) => setNutritionValues({...nutritionValues, maxFat: event.target.value})} /></td>\r\n                    </tr>\r\n                    <tr><td colSpan=\"2\">*per day</td></tr>\r\n                </tbody>) :\r\n                (<tbody>\r\n                    <tr><td>Calories:</td><td>{props.nutrition.calory}</td></tr>\r\n                    <tr><td>Carbs:</td><td>{props.nutrition.carbs + 'gr'}</td></tr>\r\n                    <tr><td>Fat:</td><td>{props.nutrition.fat + 'gr'}</td></tr>\r\n                </tbody>)\r\n            }\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Nutrition;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\otherDetails.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\recipeSummary.js",["136"],"import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport RecipeDetail from '../layout/content/recipe/recipeDetail';\r\nimport OtherDetails from './otherDetails';\r\nimport './recipeSummary.css';\r\nimport './modal.css';\r\nimport ImageNotFound from '../local_img/img_placeholder2.png';\r\n\r\nfunction RecipeSummary(props) {\r\n    const otherDetails = [{'name': 'Cooking Time', 'value': '26 min'}, \r\n    {'name': 'Cuisine', 'value': 'Iranian'}, \r\n    {'name': 'Chef', 'value' : 'Me'}, \r\n    {'name': 'Source', 'value': 'www'}]\r\n\r\n    const recipe = props.recipe;\r\n\r\n    const img_address = recipe.icon ? `/img/${recipe.icon}` : ImageNotFound;\r\n    \r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"recipe-item-container\">\r\n                <div className=\"recipe-item-summary-container\">\r\n                    <div className=\"recipe-item-detail\">\r\n                        <div className=\"recipe-item-summary-item-container\">\r\n                            <img src={img_address} className=\"recipe-item-img\" alt=\"Recipe Image\"/>\r\n                        </div>\r\n                        <Popup\r\n                            trigger={\r\n                                <div className=\"recipe-item-summary-item-container recipe-item-detail-item-container-hallow\">\r\n                                    Show Recipe\r\n                                </div>}\r\n                            modal>\r\n                            {close => (\r\n                                <div className=\"modal\">\r\n                                    <button className=\"close\" onClick={close}>&times;</button>\r\n                                    <div className=\"content\">\r\n                                        <RecipeDetail recipe={recipe}/>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Popup>\r\n                    </div>\r\n                </div>\r\n                <div className=\"recipe-summary-recipe-name\">\r\n                    {recipe.name != null ? recipe.name : 'Recipe Name'}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    {/* <Nutrition className=\"recipe-detail-detail-nutrition\" /> */}\r\n                    <OtherDetails otherDetails={otherDetails} className=\"recipe-detail-detail-other\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeSummary;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\tag\\tag.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\ad\\ad.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\search\\search.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\content.js",["137"],"import React from 'react';\r\nimport useReactRouter from 'use-react-router';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useRecipeSearch } from '../../base/api/useBusinessSearch';\r\nimport RecipeList from './recipe/recipeList';\r\nimport RecipeGroup from './recipe/group/recipeGroup';\r\nimport NewRecipe from './recipe/newRecipe/newRecipe';\r\nimport Search from '../../layout/search/search';\r\nimport { RECIPE_SEARCH_LIST_PATH, RECIPE_SEARCH_GROUP_PATH } from '../../base/api/config';\r\nimport './content.css';\r\n\r\nfunction MainContent(props) {\r\n  function Home() {\r\n    return <h2>Home</h2>;\r\n  }\r\n  const { location, history } = useReactRouter();\r\n  const params = new URLSearchParams(location.search);\r\n  const path = decidePath(params);\r\n  const [recipes, searchParams, performSearch] = useRecipeSearch(path, params);\r\n\r\n  function submitNewRecipe(recipeName, ingredientsList) {\r\n    console.log(recipeName, ingredientsList)\r\n  }\r\n\r\n  function search(searchParam, searchMode) {\r\n    if (searchMode === 'group')\r\n      return searchGroup(searchParam);\r\n    else\r\n      return searchList(searchParam);\r\n  }\r\n\r\n  function searchList(searchParam) {\r\n    const encodedRecipeName = encodeURI(searchParam.recipeName);\r\n    const encodedIncludedIngredients = encodeURI(searchParam.includedIngredients);\r\n    const encodedExcludedIngredients = encodeURI(searchParam.excludedIngredients);\r\n    const encodedTags = encodeURI(searchParam.tags);\r\n    const encodedCategory = encodeURI(searchParam.category);\r\n    var searchURL = `/SearchSingle?searchMode=list&recipeName=${encodedRecipeName}&excludedIngredients=${encodedExcludedIngredients}&includedIngredients=${encodedIncludedIngredients}&tags=${encodedTags}&category=${encodedCategory}`;\r\n    for (var a in searchParam.nutritions) {\r\n      searchURL += `&${a}=${searchParam.nutritions[a]}`;\r\n    }\r\n    history.push(searchURL);\r\n    performSearch({ searchParam })\r\n  }\r\n\r\n  function searchGroup(searchParam) {\r\n    const encodedNumWeeks = encodeURI(searchParam.numWeeks);\r\n    // const encodedNutritions = encodeURI(searchParam.nutritions);\r\n    const encodedExcludedIngredients = encodeURI(searchParam.excludedIngredients);\r\n    const encodedTags = encodeURI(searchParam.tags);\r\n    var searchURL = `/SearchGroup?searchMode=group&numWeeks=${encodedNumWeeks}&excludedIngredients=${encodedExcludedIngredients}&tags=${encodedTags}`;\r\n\r\n    for (var a in searchParam.nutritions) {\r\n      searchURL += `&${a}=${searchParam.nutritions[a]}`;\r\n    }\r\n    history.push(searchURL);\r\n    performSearch({ searchParam });\r\n  }\r\n\r\n  function decidePath(urlSearchParams) {\r\n    const searchMode = urlSearchParams.get('searchMode');\r\n\r\n    if (searchMode != null) {\r\n      if (searchMode === 'group') {\r\n        return RECIPE_SEARCH_GROUP_PATH\r\n      }\r\n      else\r\n        return RECIPE_SEARCH_LIST_PATH\r\n    }\r\n    else\r\n      return RECIPE_SEARCH_LIST_PATH\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <section className=\"content-search-section\">\r\n        <Search search={search} />\r\n      </section>\r\n      <section className=\"content-content-section\">\r\n        <Switch>\r\n          <Route path=\"/Recipes\">\r\n            <RecipeList />\r\n          </Route>\r\n          <Route path=\"/AddRecipe\">\r\n            <NewRecipe submitNewRecipe={submitNewRecipe}/>\r\n          </Route>\r\n          <Route path=\"/SearchGroup\">\r\n            <RecipeGroup />\r\n          </Route>\r\n          <Route path=\"/SearchSingle\">\r\n            <RecipeList recipes={recipes} />\r\n          </Route>\r\n          <Route path=\"/Ingredients\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/About\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </section>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\menu\\menu.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\recipeList.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\menu\\menuItem.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\header\\header.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\group\\recipeGroup.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\recipeDetail.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\ingredientsList.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\footer\\footer.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\useBusinessSearch.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\api.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\group\\recipeGroupList.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\api\\config.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\base\\tag\\tagContainer.js",[],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newRecipe.js",["138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport NewIngredientQuantityList from \"./newIngredientQuantityList\";\r\nimport * as api from '../../../../base/api/api';\r\nimport {RECIPE_ADD_PATH} from '../../../../base/api/config';\r\nimport ImageNotFound from '../../../../local_img/img_placeholder2.png';\r\n\r\nfunction NewRecipe(props) {\r\n\r\n    const [recipeName, setRecipeName] = useState(\"\");\r\n    const [instructions, setInstructions] = useState(\"\");\r\n    const [iconSrc, setIconSrc] = useState(\"\");\r\n    const [ingredientsList, setIngredientsList] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        setIngredientsList(ingredientsList)\r\n        \r\n    },[setIngredientsList]);\r\n\r\n    function submitNewRecipe(event) {\r\n        const fetchData = async () => {\r\n            try {\r\n                if(ingredientsList != null && ingredientsList.length > 0) {\r\n                    const data = {recipeName, ingredients: ingredientsList, instructions, iconSrc, category}\r\n                    const rawData = await api.post(RECIPE_ADD_PATH, data);\r\n                    const resp = await rawData.json();\r\n                    console.log(resp)\r\n                }\r\n            }\r\n            catch(e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchData();\r\n        // if(typeof props.submitNewRecipe === 'function')\r\n        //     props.submitNewRecipe(recipeName, ingredientsList);\r\n        event.preventDefault();\r\n    }\r\n\r\n    function updateIngredients() {\r\n        console.log(ingredientsList)\r\n    }\r\n\r\n    function onIngredientChange(updatedList) {\r\n        setIngredientsList(updatedList)\r\n    }\r\n\r\n    function onCategoryChange(event) {\r\n        let newCategoryList = category;\r\n        if(event.target.checked)\r\n            newCategoryList.push(event.target.value)\r\n        else{\r\n            category.find((element,index) =>\r\n                {\r\n                    if(element === event.target.value) \r\n                        newCategoryList.splice(index, 1)\r\n                }\r\n            )\r\n        }\r\n        setCategory(newCategoryList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitNewRecipe} method=\"POST\">\r\n                <div className=\"new-recipe-top-container\">\r\n                    <div className=\"new-recipe-img-div-container\">\r\n                        <div className=\"new-recipe-img-container-container\">\r\n                            <div className=\"new-recipe-img-container\">\r\n                                <img src={ImageNotFound} className=\"new-recipe-img\" alt=\"Recipe\" />\r\n                            </div>\r\n                            <div className=\"new-recipe-img-container new-recipe-img-container-hallow\">\r\n                                <label htmlFor=\"file-upload\" className=\"new-recipe-file-upload\">Upload</label>\r\n                            </div>\r\n                        </div>\r\n                        <input id=\"file-upload\" type=\"file\" onChange={(event)=> setIconSrc(event.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"text\" className=\"new-recipe-input new-recipe-input-recipe-name\"\r\n                                placeholder=\"Recipe Name\" name=\"newRecipeName\"\r\n                                onChange={(event) => setRecipeName(event.target.value)}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            {/*  */}\r\n                            <div><span className=\"new-recipe-title \">Category:</span>\r\n                                <span className=\"new-recipe-category-checkbox-container\">\r\n                                    <input type=\"checkbox\" id=\"Breakfast\" name=\"Breakfast\" value=\"BREAKFAST\" \r\n                                        onClick={onCategoryChange}/>\r\n                                    <label htmlFor=\"Breakfast\">Breakfast</label>\r\n                                </span>\r\n                                <span className=\"new-recipe-category-checkbox-container\">\r\n                                    <input type=\"checkbox\" id=\"Lunch\" name=\"Lunch\" value=\"LUNCH\" onClick={onCategoryChange}/>\r\n                                    <label htmlFor=\"Lunch\">Lunch</label>\r\n                                </span>\r\n                                <span className=\"new-recipe-category-checkbox-container\">\r\n                                    <input type=\"checkbox\" id=\"Dinner\" name=\"Dinner\" value=\"DINNER\" onClick={onCategoryChange}/>\r\n                                    <label htmlFor=\"Dinner\">Dinner</label>\r\n                                </span>\r\n                                <span className=\"new-recipe-category-checkbox-container\">\r\n                                    <input type=\"checkbox\" id=\"Snack\" name=\"Snack\" value=\"SNACK\" onClick={onCategoryChange}/>\r\n                                    <label htmlFor=\"Snack\">Snack</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    <div className=\"new-recipe-ingredients-title\">Ingredients:</div>\r\n                    {/* <hr /> */}\r\n                    <NewIngredientQuantityList onIngredientChange={onIngredientChange} \r\n                        updateIngredients={updateIngredients}/>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <div className=\"new-recipe-ingredients-title\">Instructions:</div>\r\n                    <textarea className=\"new-recipe-input new-recipe-input-textarea\" required\r\n                    onChange={(event)=> setInstructions(event.target.value)}/>\r\n                </div>\r\n                <div className=\"new-recipe-button-container\">\r\n                    <button className=\"new-recipe-button new-recipe-submit-button\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewRecipe;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newIngredientQuantity.js",["140"],"import React, { useEffect, useState } from \"react\";\r\nimport Minus from '../../../../local_img/minus24.png';\r\nimport './newRecipe.css';\r\n\r\nfunction NewIngredientQuantity(props) {\r\n    const currentId = props.index;\r\n    const [ingredientName, setIngredientName] = useState(\"\");\r\n    const [ingredientAmount, setIngredientAmount] = useState(0);\r\n    const [measurement, setMeasurement] = useState(\"gr\");\r\n\r\n    function onRemoveItem() {\r\n        props.onRemoveIngredient(currentId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(typeof props.updateIngredient === 'function')\r\n            props.updateIngredient(currentId, ingredientName, ingredientAmount, measurement)\r\n    },[currentId, ingredientName, setIngredientName, ingredientAmount, setIngredientAmount, measurement, setMeasurement]);\r\n\r\n    return (\r\n        <div className=\"new-recipe-ingredient-container\">\r\n            <input type=\"text\" className=\"new-recipe-input new-recipe-input-text\" required\r\n                onChange={(event)=> setIngredientName(event.target.value)} placeholder=\"Name\"/>\r\n            <input type=\"number\" className=\"new-recipe-input new-recipe-input-number\" required\r\n                min=\"1\"\r\n                onChange={(event) => setIngredientAmount(event.target.value)} placeholder=\"Quantity\"/>\r\n            <select id=\"category-option\" className=\"new-recipe-input new-recipe-select\" required\r\n                onChange={(event) => setMeasurement(event.target.value)}>\r\n                <option>gr</option>\r\n                <option>tbsp</option>\r\n                <option>tsp</option>\r\n                <option></option>\r\n            </select>\r\n            <img src={Minus} alt=\"remove\" className=\"new-recipe-ingredient-remove-img\" onClick={onRemoveItem}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewIngredientQuantity;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\newRecipe\\newIngredientQuantityList.js",["141"],"import React, { useState, useEffect } from \"react\";\r\nimport Plus from '../../../../local_img/plus24.png';\r\nimport NewIngredientQuantity from \"./newIngredientQuantity\";\r\nimport './newRecipe.css';\r\n\r\nfunction NewIngredientQuantityList(props) {\r\n    \r\n    const [newIngredientComponentList, setNewIngredientComponentList] = useState(generateFirstFew);\r\n    const [newIngredientNameList, setNewIngredientNameList] = useState([]);\r\n    const [simpleIngredientsList, setSimpleIngredientsList] = useState([]);\r\n    const [removeIndex, setRemoveIndex] = useState(-1);\r\n    const [addIndex, setAddIndex] = useState(-1);\r\n\r\n    useEffect(()=> {\r\n        if(removeIndex > -1){\r\n            setNewIngredientComponentList(newIngredientComponentList.filter(\r\n                item => item.key !== (\"new-ingredient-container-\" + removeIndex)));\r\n            \r\n            simpleIngredientsList.splice(removeIndex, 1);\r\n\r\n            addRemoveIngredientsInParent(removeIndex)\r\n            setRemoveIndex(-2);\r\n        }\r\n        if(addIndex > -1) {\r\n            addRemoveIngredientsInParent(-1)\r\n            simpleIngredientsList.push({})\r\n            setAddIndex(-2);\r\n        }\r\n    },[newIngredientComponentList, setNewIngredientComponentList, \r\n        removeIndex, setRemoveIndex, addIndex, setAddIndex, simpleIngredientsList, setSimpleIngredientsList]);\r\n\r\n    function generateFirstFew() {\r\n        let initialList = [];\r\n        for(var i = 0; i < 5; i++) {\r\n            initialList.push(<NewIngredientQuantity index={i} \r\n                            onRemoveIngredient={removeIngredient} \r\n                            key={\"new-ingredient-container-\" + i}\r\n                            updateIngredient={ingredientChange}\r\n                        />)\r\n        }\r\n        return initialList;        \r\n    }\r\n\r\n    function ingredientChange(currentId, ingredientName, ingredientAmount, measurement) {\r\n        let items = simpleIngredientsList;\r\n        let item = items[currentId];\r\n        item = { ingredientName, ingredientAmount, measurement };\r\n        items[currentId] = item;\r\n        setSimpleIngredientsList(items);\r\n        if (typeof props.onIngredientChange === 'function') {\r\n            props.onIngredientChange(items)\r\n        }\r\n    }\r\n\r\n    function addIngredient() {\r\n        const newIndex = newIngredientComponentList.length;\r\n        setNewIngredientComponentList([...newIngredientComponentList,<NewIngredientQuantity index={newIndex} \r\n            onRemoveIngredient={removeIngredient} \r\n            key={\"new-ingredient-container-\" + newIndex}\r\n            updateIngredient={ingredientChange}/>]);\r\n        setNewIngredientNameList([...newIngredientNameList, newIndex])\r\n\r\n        setAddIndex(1);\r\n    }\r\n\r\n    function removeIngredient(index) {\r\n        setRemoveIndex(index)\r\n    }\r\n\r\n    function addRemoveIngredientsInParent(ingIndex) {\r\n        if (typeof props.onIngredientChange === 'function') {\r\n            props.onIngredientChange(simpleIngredientsList)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newIngredientComponentList}\r\n            <button onClick={addIngredient} className=\"new-recipe-button new-recipe-ingredient-add-button\">\r\n                <img src={Plus} alt=\"add another\" />&nbsp;\r\n                Add Another\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewIngredientQuantityList;\r\n","C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\grocery\\grocery.js",["142"],"C:\\Users\\reiha_\\eclipse-workspace\\recipeUI\\recipe-recommendation-ui\\src\\layout\\content\\recipe\\grocery\\groceryItem.js",["143"],"import './grocery.css';\r\nimport ImageNotFound from '../../../../local_img/img_placeholder2.png';\r\n\r\nfunction GroceryItem(props) {\r\n    // const quantities = props.quantity.join(\",\");\r\n\r\n    return (\r\n        <div className=\"grocery-item-container\">\r\n            <table className=\"grocery-item-table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"grocery-item-cell-icon\">\r\n                            <img src={ImageNotFound} className=\"grocery-item-icon\"/>\r\n                        </td>\r\n                        <td className=\"grocery-item-cell\">\r\n                            <div>{props.name}</div>\r\n                            <div>\r\n                            {\r\n                                props.quantity.map((q, index)=>{\r\n                                    return <div key={\"grocery-item-\" + index}>{q}</div>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroceryItem;\r\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":11,"column":38,"nodeType":"150","endLine":11,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":21,"column":9,"nodeType":"150","endLine":21,"endColumn":44},{"ruleId":"148","severity":1,"message":"149","line":24,"column":9,"nodeType":"150","endLine":24,"endColumn":44},{"ruleId":"144","replacedBy":"151"},{"ruleId":"146","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":8,"column":8,"nodeType":"155","endLine":8,"endColumn":25,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":25,"column":29,"nodeType":"150","endLine":25,"endColumn":100},{"ruleId":"159","severity":1,"message":"160","line":19,"column":19,"nodeType":"161","messageId":"162","endLine":19,"endColumn":31},{"ruleId":"153","severity":1,"message":"163","line":18,"column":7,"nodeType":"155","endLine":18,"endColumn":27,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":53,"column":43,"nodeType":"167","messageId":"168","endLine":53,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":18,"column":7,"nodeType":"155","endLine":18,"endColumn":121,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"170","line":29,"column":7,"nodeType":"155","endLine":30,"endColumn":109,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"172","line":22,"column":52,"nodeType":"167","messageId":"168","endLine":22,"endColumn":54},{"ruleId":"173","severity":1,"message":"174","line":13,"column":29,"nodeType":"150","endLine":13,"endColumn":85},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["175"],["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["177"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'searchParams' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'ingredientsList'. Either include it or remove the dependency array. You can also do a functional update 'setIngredientsList(i => ...)' if you only need 'ingredientsList' in the 'setIngredientsList' call.",["178"],"array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["179"],"React Hook useEffect has a missing dependency: 'addRemoveIngredientsInParent'. Either include it or remove the dependency array.",["180"],"Array.prototype.map() expects a return value from arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [nutritionValues, props]",{"range":"189","text":"190"},"Update the dependencies array to be: [ingredientsList, setIngredientsList]",{"range":"191","text":"192"},"Update the dependencies array to be: [currentId, ingredientName, setIngredientName, ingredientAmount, setIngredientAmount, measurement, setMeasurement, props]",{"range":"193","text":"194"},"Update the dependencies array to be: [newIngredientComponentList, setNewIngredientComponentList, removeIndex, setRemoveIndex, addIndex, setAddIndex, simpleIngredientsList, setSimpleIngredientsList, addRemoveIngredientsInParent]",{"range":"195","text":"196"},[219,236],"[nutritionValues, props]",[705,725],"[ingredientsList, setIngredientsList]",[672,786],"[currentId, ingredientName, setIngredientName, ingredientAmount, setIngredientAmount, measurement, setMeasurement, props]",[1170,1340],"[newIngredientComponentList, setNewIngredientComponentList, removeIndex, setRemoveIndex, addIndex, setAddIndex, simpleIngredientsList, setSimpleIngredientsList, addRemoveIngredientsInParent]"]